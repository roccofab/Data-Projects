q()
png("carburatori_miglia_per_gallone.png")
boxplot(mpg~carb_factor, data = mtcars,
        col = "skyblue",
        main = "Distribuzione miglia per galloni e numero di carburatori veicoli",
        xlab = "miglia per gallone",
        ylab = "numero carburatori")
dev.off
carb_factor = as.factor(mtcars$carb)
print(table(carb_factor))
#visualizzare tramite boxplot come variano i valori di mg(miglia per gallone) nei gruppi categoriali in carb_factor
png("carburatori_miglia_per_gallone.png")
boxplot(mpg~carb_factor, data = mtcars,
        col = "skyblue",
        main = "Distribuzione miglia per galloni e numero di carburatori veicoli",
        xlab = "miglia per gallone",
        ylab = "numero carburatori")
dev.off()
carb_factor = as.factor(mtcars$carb)
print(table(carb_factor))
#visualizzare tramite boxplot come variano i valori di mg(miglia per gallone) nei gruppi categoriali in carb_factor
png("carburatori_miglia_per_gallone.png")
boxplot(mpg~carb_factor, data = mtcars,
        col = "skyblue",
        main = "Distribuzione miglia per galloni e numero di carburatori veicoli",
        xlab = "miglia per gallone",
        ylab = "numero carburatori")
dev.off()
getwd()
q()
q()
png("MilesPerGallon_cylinders.png")
plot(df$Miles_Per_Gallon, df$cylinders,
     col = "black",
     xlab = "mpg",
     ylab = "cyl",
     main = "Miles Per Gallon-Number of cylinders trend",
     pch = 19)
abline(lm(mpg ~ cyl, data = df), col = "red", lty = 2)
dev.off()
ng("MilesPerGallon_cylinders.png")
plot(df$Miles_Per_Gallon, df$cylinders,
     col = "black",
     xlab = "mpg",
     ylab = "cyl",
     main = "Miles Per Gallon-Number of cylinders trend",
     pch = 19)
abline(lm(mpg ~ cyl, data = mtcars), col = "red", lty = 2)
dev.off()
png("MilesPerGallon_cylinders.png")
plot(df$Miles_Per_Gallon, df$cylinders,
     col = "black",
     xlab = "mpg",
     ylab = "cyl",
     main = "Miles Per Gallon-Number of cylinders trend",
     pch = 19)
abline(lm(mpg ~ cyl, data = df), col = "red", lty = 2)
dev.off()
q()
data(mtcars)
data(mtcars)
str(mtcars)
#DESCRIPTION:       Try to understand how the most significant variables on the variability of consumption in mpg identified in the PreAnalysis.r script
#                          influence in a combined way the fuel-consumption in miles per gallon(mpg).
#                   In the PreAnalysis.R script I identyfied some strong numeric predictors and numeric categorial predictors of the variable mpg:
#                     hp->horsepower
#                     wt->weight(lbs)
#                     disp->displacement
#                     cyl->cylinders
#                     am->transmission(0:Automatic,1:Manual)
#                     vs->engine shape(0:V-shape, 1:straight)
#                     carb->number of carburators
#                     cyl->cylinders
#create a vector containing the names of the cars: in the mtcars dataset the names of the cars represent the row names
name_cars = rownames(mtcars)
name_cars
#dataframe
mtcars_df = data.frame(model = name_cars, Miles_Per_Gallon = mtcars$mpg,
                cylinders = mtcars$cyl,displacement=mtcars$disp,
                horsepower=mtcars$hp, weight = mtcars$wt,
                Rear_axle_ration = mtcars$drat,gears = mtcars$gear,
                Quarter_Mile_Time = mtcars$qsec,Transmission = mtcars$am,engine_shape = mtcars$vs,
                carburators = mtcars$carb)
mtcars_df$performance = mtcars_df$horsepower/mtcars_df$weight  #add a new column performance
#cast the categorial variables of the mtcars_df to factors
mtcars_df$Transmission = as.factor(mtcars_df$Transmission)  #(0,1)
mtcars_df$engine_shape = as.factor(mtcars_df$engine_shape)  #(0,1)
mtcars_df$cylinders = as.factor(mtcars_df$cylinders)  # (4, 6, 8)
mtcars_df$carburators = as.factor(mtcars_df$carburators)  #(1,2,3,4,6,8)
#Multiple linear regression model using the function lm():
regression_model = lm(Miles_Per_Gallon ~ weight + horsepower + displacement + cylinders + Transmission + engine_shape + carburators, data = mtcars_df)
#get the summary about the regression_model:
summary(regression_model)
head(mtcars)
q()
#DESCRIPTION:    Correlation analysis between the numeric variables of the 
#                   mtcars dataset.
#                Find the variables that are most correlated with the miles per gallon(mpg) variable
#                   using the correlation matrix.
#                The values inside the correlation matrix represents the pearson correlation coefficient
#                    which estimates the strength and linear correlation between two numerical variables.
#                Variables with a correlation coefficient close to 1 have a strong positive linear correlation and
#                    the variables with a correlation coefficient close to -1 have a strong negative linear correlation.
#                Based on the linear regression analysis I've identified the variables that most influence the mpg consumption:
#                     hp->horsepower
#                     wt->weight(lbs)
name_cars = rownames(mtcars)
name_cars
#dataframe
mtcars_df = data.frame(model = name_cars, Miles_Per_Gallon = mtcars$mpg,
                cylinders = mtcars$cyl,displacement=mtcars$disp,
                horsepower=mtcars$hp, weight = mtcars$wt,
                Rear_axle_ration = mtcars$drat,gears = mtcars$gear,
                Quarter_Mile_Time = mtcars$qsec,Transmission = mtcars$am,engine_shape = mtcars$vs,
                carburators = mtcars$carb)
mtcars_df$performance = mtcars_df$horsepower/mtcars_df$weight
variables = mtcars %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png")
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 1.5,       #font size
         tl.font = 2,        #bold labels   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
#DESCRIPTION:    Correlation analysis between the numeric variables of the 
#                   mtcars dataset.
#                Find the variables that are most correlated with the miles per gallon(mpg) variable
#                   using the correlation matrix.
#                The values inside the correlation matrix represents the pearson correlation coefficient
#                    which estimates the strength and linear correlation between two numerical variables.
#                Variables with a correlation coefficient close to 1 have a strong positive linear correlation and
#                    the variables with a correlation coefficient close to -1 have a strong negative linear correlation.
#                Based on the linear regression analysis I've identified the variables that most influence the mpg consumption:
#                     hp->horsepower
#                     wt->weight(lbs)
library(dplyr)
library(corrplot)
name_cars = rownames(mtcars)
name_cars
#dataframe
mtcars_df = data.frame(model = name_cars, Miles_Per_Gallon = mtcars$mpg,
                cylinders = mtcars$cyl,displacement=mtcars$disp,
                horsepower=mtcars$hp, weight = mtcars$wt,
                Rear_axle_ration = mtcars$drat,gears = mtcars$gear,
                Quarter_Mile_Time = mtcars$qsec,Transmission = mtcars$am,engine_shape = mtcars$vs,
                carburators = mtcars$carb)
mtcars_df$performance = mtcars_df$horsepower/mtcars_df$weight
variables = mtcars %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png")
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 1.5,       #font size
         tl.font = 2,        #bold labels   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
#DESCRIPTION:    Correlation analysis between the numeric variables of the 
#                   mtcars dataset.
#                Find the variables that are most correlated with the miles per gallon(mpg) variable
#                   using the correlation matrix.
#                The values inside the correlation matrix represents the pearson correlation coefficient
#                    which estimates the strength and linear correlation between two numerical variables.
#                Variables with a correlation coefficient close to 1 have a strong positive linear correlation and
#                    the variables with a correlation coefficient close to -1 have a strong negative linear correlation.
#                Based on the linear regression analysis I've identified the variables that most influence the mpg consumption:
#                     hp->horsepower
#                     wt->weight(lbs)
library(dplyr)
library(corrplot)
name_cars = rownames(mtcars)
name_cars
#dataframe
mtcars_df = data.frame(model = name_cars, Miles_Per_Gallon = mtcars$mpg,
                cylinders = mtcars$cyl,displacement=mtcars$disp,
                horsepower=mtcars$hp, weight = mtcars$wt,
                Rear_axle_ration = mtcars$drat,gears = mtcars$gear,
                Quarter_Mile_Time = mtcars$qsec,Transmission = mtcars$am,engine_shape = mtcars$vs,
                carburators = mtcars$carb)
mtcars_df$performance = mtcars_df$horsepower/mtcars_df$weight
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png")
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 1.5,       #font size
         tl.font = 2,        #bold labels   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
#DESCRIPTION:    Correlation analysis between the numeric variables of the 
#                   mtcars dataset.
#                Find the variables that are most correlated with the miles per gallon(mpg) variable
#                   using the correlation matrix.
#                The values inside the correlation matrix represents the pearson correlation coefficient
#                    which estimates the strength and linear correlation between two numerical variables.
#                Variables with a correlation coefficient close to 1 have a strong positive linear correlation and
#                    the variables with a correlation coefficient close to -1 have a strong negative linear correlation.
#                Based on the linear regression analysis I've identified the variables that most influence the mpg consumption:
#                     hp->horsepower
#                     wt->weight(lbs)
library(dplyr)
library(corrplot)
name_cars = rownames(mtcars)
name_cars
#dataframe
mtcars_df = data.frame(model = name_cars, Miles_Per_Gallon = mtcars$mpg,
                cylinders = mtcars$cyl,displacement=mtcars$disp,
                horsepower=mtcars$hp, weight = mtcars$wt,
                Rear_axle_ration = mtcars$drat,gears = mtcars$gear,
                Quarter_Mile_Time = mtcars$qsec,Transmission = mtcars$am,engine_shape = mtcars$vs,
                carburators = mtcars$carb)
mtcars_df$performance = mtcars_df$horsepower/mtcars_df$weight
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png")
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 1.5,       #font size
         tl.font = 2,        #bold labels   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
#DESCRIPTION:    Correlation analysis between the numeric variables of the 
#                   mtcars dataset.
#                Find the variables that are most correlated with the miles per gallon(mpg) variable
#                   using the correlation matrix.
#                The values inside the correlation matrix represents the pearson correlation coefficient
#                    which estimates the strength and linear correlation between two numerical variables.
#                Variables with a correlation coefficient close to 1 have a strong positive linear correlation and
#                    the variables with a correlation coefficient close to -1 have a strong negative linear correlation.
#                Based on the linear regression analysis I've identified the variables that most influence the mpg consumption:
#                     hp->horsepower
#                     wt->weight(lbs)
library(dplyr)
library(corrplot)
name_cars = rownames(mtcars)
name_cars
#dataframe
mtcars_df = data.frame(model = name_cars, Miles_Per_Gallon = mtcars$mpg,
                cylinders = mtcars$cyl,displacement=mtcars$disp,
                horsepower=mtcars$hp, weight = mtcars$wt,
                Rear_axle_ration = mtcars$drat,gears = mtcars$gear,
                Quarter_Mile_Time = mtcars$qsec,Transmission = mtcars$am,engine_shape = mtcars$vs,
                carburators = mtcars$carb)
mtcars_df$performance = mtcars_df$horsepower/mtcars_df$weight
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png")
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 1.5,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1000, height = 850)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 1.5,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 1.5,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
#DESCRIPTION:    Correlation analysis between the numeric variables of the 
#                   mtcars dataset.
#                Find the variables that are most correlated with the miles per gallon(mpg) variable
#                   using the correlation matrix.
#                The values inside the correlation matrix represents the pearson correlation coefficient
#                    which estimates the strength and linear correlation between two numerical variables.
#                Variables with a correlation coefficient close to 1 have a strong positive linear correlation and
#                    the variables with a correlation coefficient close to -1 have a strong negative linear correlation.
#                Based on the linear regression analysis I've identified the variables that most influence the mpg consumption:
#                     hp->horsepower
#                     wt->weight(lbs)
library(dplyr)
library(corrplot)
setwd("C:/Users/lenovo/Desktop/python_tutorial/Analisi_Dati/RStudio/exercise/grafici")
name_cars = rownames(mtcars)
name_cars
#dataframe
mtcars_df = data.frame(model = name_cars, Miles_Per_Gallon = mtcars$mpg,
                cylinders = mtcars$cyl,displacement=mtcars$disp,
                horsepower=mtcars$hp, weight = mtcars$wt,
                Rear_axle_ration = mtcars$drat,gears = mtcars$gear,
                Quarter_Mile_Time = mtcars$qsec,Transmission = mtcars$am,engine_shape = mtcars$vs,
                carburators = mtcars$carb)
mtcars_df$performance = mtcars_df$horsepower/mtcars_df$weight
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 1.5,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
#DESCRIPTION:    Correlation analysis between the numeric variables of the 
#                   mtcars dataset.
#                Find the variables that are most correlated with the miles per gallon(mpg) variable
#                   using the correlation matrix.
#                The values inside the correlation matrix represents the pearson correlation coefficient
#                    which estimates the strength and linear correlation between two numerical variables.
#                Variables with a correlation coefficient close to 1 have a strong positive linear correlation and
#                    the variables with a correlation coefficient close to -1 have a strong negative linear correlation.
#                Based on the linear regression analysis I've identified the variables that most influence the mpg consumption:
#                     hp->horsepower
#                     wt->weight(lbs)
library(dplyr)
library(corrplot)
setwd("C:/Users/lenovo/Desktop/python_tutorial/Analisi_Dati/RStudio/exercise/grafici")
name_cars = rownames(mtcars)
name_cars
#dataframe
mtcars_df = data.frame(model = name_cars, Miles_Per_Gallon = mtcars$mpg,
                cylinders = mtcars$cyl,displacement=mtcars$disp,
                horsepower=mtcars$hp, weight = mtcars$wt,
                Rear_axle_ration = mtcars$drat,gears = mtcars$gear,
                Quarter_Mile_Time = mtcars$qsec,Transmission = mtcars$am,engine_shape = mtcars$vs,
                carburators = mtcars$carb)
mtcars_df$performance = mtcars_df$horsepower/mtcars_df$weight
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 1.8,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
#DESCRIPTION:    Correlation analysis between the numeric variables of the 
#                   mtcars dataset.
#                Find the variables that are most correlated with the miles per gallon(mpg) variable
#                   using the correlation matrix.
#                The values inside the correlation matrix represents the pearson correlation coefficient
#                    which estimates the strength and linear correlation between two numerical variables.
#                Variables with a correlation coefficient close to 1 have a strong positive linear correlation and
#                    the variables with a correlation coefficient close to -1 have a strong negative linear correlation.
#                Based on the linear regression analysis I've identified the variables that most influence the mpg consumption:
#                     hp->horsepower
#                     wt->weight(lbs)
library(dplyr)
library(corrplot)
setwd("C:/Users/lenovo/Desktop/python_tutorial/Analisi_Dati/RStudio/exercise/grafici")
name_cars = rownames(mtcars)
name_cars
#dataframe
mtcars_df = data.frame(model = name_cars, Miles_Per_Gallon = mtcars$mpg,
                cylinders = mtcars$cyl,displacement=mtcars$disp,
                horsepower=mtcars$hp, weight = mtcars$wt,
                Rear_axle_ration = mtcars$drat,gears = mtcars$gear,
                Quarter_Mile_Time = mtcars$qsec,Transmission = mtcars$am,engine_shape = mtcars$vs,
                carburators = mtcars$carb)
mtcars_df$performance = mtcars_df$horsepower/mtcars_df$weight
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 2.0,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 2.0,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "purple",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 2.0,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "orange",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 2.0,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "green dark",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 2.0,       #font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "dark green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 2.0,       #font size
         number.cex = 1.8    #coefficients font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "dark green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
variables = mtcars_df %>%
  select(Miles_Per_Gallon,cylinders,displacement,horsepower,Rear_axle_ration,weight,Quarter_Mile_Time,engine_shape,Transmission,gears,carburators)
corr_matrix = cor(variables)
png("heatmap_correlation.png", width = 1200, height = 950)
corrplot(corr_matrix,
         method = "shade",
         type = "full",
         order = "hclust",   #group variables with similar values
         tl.col = "black",   #labels color
         tl.cex = 2.0,       #font size
         number.cex = 1.8,    #coefficients font size   
         tl.srt = 45,        #rotation of the labels
         addCoef.col = "dark green",   #correlation coefficients color 
         cl.pos = "r")
dev.off() 
head(mtcars)
q()
